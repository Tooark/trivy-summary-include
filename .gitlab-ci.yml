spec:
  inputs:
    docker-image:
      description: "Docker image name"
      type: string
    architecture:
      description: "Architecture (amd64 or arm64)"
      type: string
      default: ""
---

stages:
- scan

variables:
  TRIVY_JSON: "gl-container-scanning-report.json"
  TRIVY_IMAGE: public.ecr.aws/n6a9k4a7/deploy:1-trivy

.docker_scan:
  rules:
  - if: '"$[[ inputs.architecture | expand_vars ]]" == ""'
  stage: scan
  image: $TRIVY_IMAGE
  before_script:
  - apk add --no-cache jq
  - apk add --no-cache docker
  script:
  - trivy image "$[[inputs.docker-image]]" | tee $TRIVY_JSON
  after_script:
  - |
    critical=$(jq '[.Results[].Vulnerabilities[]? | select(.Severity=="CRITICAL")] | length' $TRIVY_JSON)
    high=$(jq '[.Results[].Vulnerabilities[]? | select(.Severity=="HIGH")] | length' $TRIVY_JSON)
    medium=$(jq '[.Results[].Vulnerabilities[]? | select(.Severity=="MEDIUM")] | length' $TRIVY_JSON)
    low=$(jq '[.Results[].Vulnerabilities[]? | select(.Severity=="LOW")] | length' $TRIVY_JSON)
    unknown=$(jq '[.Results[].Vulnerabilities[]? | select(.Severity=="UNKNOWN")] | length' $TRIVY_JSON)
    total=$((critical + high + medium + low + unknown))
    echo "CRITICAL_COUNT=$critical" >> variables.env
    echo "HIGH_COUNT=$high" >> variables.env
    echo "MEDIUM_COUNT=$medium" >> variables.env
    echo "LOW_COUNT=$low" >> variables.env
    echo "UNKNOWN_COUNT=$unknown" >> variables.env
    echo "TOTAL_COUNT=$total" >> variables.env
  artifacts:
    paths:
    - $TRIVY_JSON
    reports:
      dotenv: variables.env
    untracked: false
    when: on_success
    access: developer
    expire_in: "1 day"

.docker_scan_amd64:
  rules:
  - if: '"$[[ inputs.architecture | expand_vars ]]" == "amd64"'
  stage: scan
  image: aquasec/trivy:latest
  before_script:
  - apk add --no-cache jq
  - apk add --no-cache docker
  script:
  - trivy image "$[[inputs.docker-image]]" | tee $TRIVY_JSON
  after_script:
  - |
    critical=$(jq '[.Results[].Vulnerabilities[]? | select(.Severity=="CRITICAL")] | length' $TRIVY_JSON)
    high=$(jq '[.Results[].Vulnerabilities[]? | select(.Severity=="HIGH")] | length' $TRIVY_JSON)
    medium=$(jq '[.Results[].Vulnerabilities[]? | select(.Severity=="MEDIUM")] | length' $TRIVY_JSON)
    low=$(jq '[.Results[].Vulnerabilities[]? | select(.Severity=="LOW")] | length' $TRIVY_JSON)
    unknown=$(jq '[.Results[].Vulnerabilities[]? | select(.Severity=="UNKNOWN")] | length' $TRIVY_JSON)
    total=$((critical + high + medium + low + unknown))
    echo "CRITICAL_COUNT=$critical" >> variables.env
    echo "HIGH_COUNT=$high" >> variables.env
    echo "MEDIUM_COUNT=$medium" >> variables.env
    echo "LOW_COUNT=$low" >> variables.env
    echo "UNKNOWN_COUNT=$unknown" >> variables.env
    echo "TOTAL_COUNT=$total" >> variables.env
  artifacts:
    paths:
    - $TRIVY_JSON
    reports:
      dotenv: variables.env
    untracked: false
    when: on_success
    access: developer
    expire_in: "1 day"
  tags:
  - amd64
